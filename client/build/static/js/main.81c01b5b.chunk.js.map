{"version":3,"sources":["helpers/validate-class-name.js","components/nav-bar/buttons/LogInButton.js","components/nav-bar/buttons/LogOutButton.js","components/nav-bar/buttons/TutorialButton.js","helpers/validate-class-name-list.js","components/nav-bar/buttons/SaveButton.js","components/nav-bar/buttons/LoadButton.js","components/nav-bar/buttons/GenerativeButton.js","components/nav-bar/containers/NavBarContainer.js","helpers/current-component-is-in-focus.js","components/grid-panel/components/utilities/buttons/MuteButton.js","components/grid-panel/components/utilities/buttons/ResetButton.js","components/grid-panel/components/utilities/containers/UtilitiesContainer.js","components/grid-panel/components/oscillators/panels/components/WaveButton.js","components/grid-panel/modals/RenameModal.js","data/default-oscillator-settings.js","components/grid-panel/components/oscillators/panels/OscillatorPanel.js","components/grid-panel/components/oscillators/containers/OscillatorContainer.js","components/grid-panel/components/fx/panels/TremoloPanel.js","components/grid-panel/components/fx/panels/DelayPanel.js","components/grid-panel/components/fx/panels/ReverbPanel.js","components/grid-panel/components/fx/panels/DistortionPanel.js","components/grid-panel/components/fx/containers/FxContainer.js","components/grid-panel/components/title/containers/DisplayContainer.js","components/grid-panel/containers/GridPanelContainer.js","components/grid-panel/components/title/panels/forms/TutorialPanel.js","controllers/TutorialController.js","components/grid-panel/components/title/panels/playback-states/GenerativePanel.js","components/grid-panel/components/title/panels/playback-states/DefaultPanel.js","default-state/default-app-state.js","helpers/attempt-login.js","components/grid-panel/components/title/panels/forms/LoginFormPanel.js","validations/user-validation.js","helpers/attempt-register.js","components/grid-panel/components/title/panels/forms/RegisterFormPanel.js","helpers/load-new-fx-parameters.js","components/grid-panel/components/title/panels/crud/LoadPanel.js","validations/patch-bank-validation.js","helpers/extract-fx-data.js","helpers/extract-oscillator-data.js","helpers/post-data.js","components/grid-panel/components/title/panels/crud/SavePanel.js","helpers/entry-is-not-empty.js","helpers/app-reducer.js","App.js","audio-units/oscillator.js","factories/oscillator-factory.js","data/default-fx-settings.js","factories/fx-factory.js","audio-units/tremolo.js","audio-units/delay.js","audio-units/reverb.js","audio-units/distortion.js","images/faIcons.js","index.js","helpers/audio-configuration.js"],"names":["validateClassName","activeID","currentID","className","LogInButton","dispatchAppState","loginAttemptActive","setLoginAttemptActive","animationId","useContext","AnimationIdContext","animationClassName","name","onClick","type","prevState","icon","LogOutButton","localStorage","removeItem","COMPONENT_IDS","TutorialButton","appState","setAnimationId","includes","tutorial","SaveButton","signedIn","LoadButton","GenerativeButton","generative","NavBarContainer","displayVisible","DisplayVisibleContext","style","display","currentComponentIsInFocus","id","document","activeElement","COMPONENT_ID","MuteButton","keyDownHandler","useCallback","event","key","mute","useEffect","addEventListener","removeEventListener","tabIndex","ResetButton","setResetState","AudioComponentsContext","prev","UtilitiesContainer","WaveButton","time","waveType","setWaveShape","index","animation","animationDelay","RenameModal","currentLabel","setCurrentLabel","setDisplayVisible","setShowRenameModal","oscillators","setOscillators","fx","setFx","inputTextBox","useRef","current","focus","window","onSubmit","preventDefault","map","elem","label","htmlFor","onChange","target","value","ref","defaultOscillatorSettings","DEFAULT_WAVE_TYPES","DEFAULT_FREQUENCY","DEFAULT_WAVESHAPE","DEFAULT_MIN_FREQUENCY","DEFAULT_MAX_FREQUENCY","DEFAULT_VOLUME","DEFAULT_MIN_VOLUME","DEFAULT_MAX_VOLUME","OscillatorPanel","oscillator","resetState","unit","reset","renameAnimationClassName","allOscillatorAnimationClassName","useState","showRenameModal","frequency","setFrequency","frequencySlider","volume","setVolume","volumeSlider","waveShape","onDoubleClick","uniqueId","Slider","min","max","size","defaultValue","color","height","zIndex","OscillatorContainer","TremoloPanel","parameters","depth","speed","wet","panelAnimationClassName","labelAnimationClassName","toUpperCase","groupAnimationClassName","depthValue","setDepthValue","depthSlider","speedValue","setSpeedValue","speedSlider","wetValue","setWetValue","wetSlider","DelayPanel","repeats","timeValue","setTimeValue","timeSlider","delayTime","repeatsValue","setRepeatsValue","repeatsSlider","feedback","ReverbPanel","sizeValue","setSizeValue","sizeSlider","decay","DistortionPanel","dirt","dirtValue","setDirtValue","dirtSlider","distortion","FxContainer","tremolo","delay","reverb","DisplayContainer","GridPanelContainer","tutorialController","hasNext","tutorialData","length","hasPrevious","next","previous","start","this","TutorialPanel","tutorialText","setTutorialText","updateTutorialState","copy","keydown","keyIsLeft","keyCode","keyIsRight","tutorialHasPrevious","tutorialHasNext","split","line","GenerativePanel","previousSettings","volumeAutomations","filter","randomInterval","Math","random","pivotValue","setInterval","randomValue","frequencyAutomations","forEach","clearInterval","DEFAULT_TEXT","DefaultPanel","text","currentText","setCurrentText","pendingTextUpdates","animationActive","setAnimationActive","setTimeout","clearTimeout","defaultAppState","attemptLogin","data","a","fetch","method","body","JSON","stringify","headers","LoginFormPanel","onSubmitHandler","username","password","loginResponse","status","json","setItem","token","class","userValidation","yup","shape","email","required","attemptRegister","RegisterFormPanel","isValid","response","loadNewFxParameters","prevTremolo","newTremolo","prevDelay","newDelay","prevReverb","newReverb","prevDistortion","newDistortion","LoadPanel","loadingText","fontSize","currentPatch","setCurrentPatch","patchBank","setPatchBank","patchIndex","getItem","fetchUsersPatchBank","parameter","at","newOscillators","newFx","oscillatorBeingLoaded","patch","deleteCurrentPatch","patchBankValidation","of","extractDelayData","extractReverbData","extractDistortionData","extractFxData","extractOscillatorData","postData","SavePanel","form","promptText","setPromptText","fxData","oscillatorData","entry","toString","trim","types","appReducer","state","action","Error","createContext","App","defaultOscillators","defaultFx","useReducer","Provider","DEFAULT_OSCILLATOR_LABELS","Tone","waveshape","Oscillator","oscillatorFactory","pendingVolumeUpdate","volumeUpdateValue","defaultFxSettings","fxFactory","TYPE","Distortion","PingPongDelay","Reverb","Tremolo","DEFAULT_PARAM_VALUE","DEFAULT_MIN_RANGE","DEFAULT_MAX_RANGE","DEFAULT_MIX_VALUE","set","Delay","faIcons","faWaveformPath","faEject","faBook","faFileUpload","faSignOut","faWindowClose","faSignIn","faFileDownload","faPauseCircle","faPlayCircle","faRedo","faVolume","faVolumeOff","faArrowLeft","faArrowRight","faTrash","faWaveSine","faWaveSquare","faWaveTriangle","library","add","push","oscillatorUnits","fxUnits","chain","Limiter","Destination","audioConfiguration","once","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.81c01b5b.chunk.js","sourcesContent":["export const validateClassName = (activeID, currentID, className) => {\n  return activeID === currentID ? className : '';\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useContext } from 'react';\nimport { AnimationIdContext } from '../../../App';\nimport { validateClassName } from '../../../helpers/validate-class-name';\n\nconst COMPONENT_ID = 'ACCOUNT_ACCESS';\n\nexport const LogInButton = ({\n  dispatchAppState,\n  loginAttemptActive,\n  setLoginAttemptActive,\n}) => {\n  const { animationId } = useContext(AnimationIdContext);\n\n  const clickHandler = () => {\n    dispatchAppState({\n      type: loginAttemptActive ? 'RETURN' : 'LOGIN',\n      dispatchAppState: dispatchAppState,\n      setLoginAttemptActive: setLoginAttemptActive,\n    });\n    setLoginAttemptActive((prevState) => !prevState);\n  };\n\n  // Ascertain the status of the components tutorial-animation state\n  const animationClassName = validateClassName(\n    animationId,\n    COMPONENT_ID,\n    'sidebar-pulse-animation'\n  );\n\n  return (\n    <button\n      name=\"account-access\"\n      className={`sidebar-component account-access-component ${animationClassName}`}\n      onClick={clickHandler}\n    >\n      {loginAttemptActive ? (\n        <>\n          <FontAwesomeIcon icon={['far', 'window-close']} />\n          <p className=\"sidebar-component-label\">Cancel</p>\n        </>\n      ) : (\n        <>\n          <FontAwesomeIcon icon={['far', 'sign-in']} />\n          <p className=\"sidebar-component-label\">Sign-In</p>\n        </>\n      )}\n    </button>\n  );\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useContext } from 'react';\nimport { AnimationIdContext } from '../../../App';\nimport { validateClassName } from '../../../helpers/validate-class-name';\n\nconst COMPONENT_ID = 'ACCOUNT_ACCESS';\n\nexport const LogOutButton = ({ dispatchAppState, setLoginAttemptActive }) => {\n  const { animationId } = useContext(AnimationIdContext);\n\n  const clickHandler = () => {\n    // Destroy webtoken so future sessions require login\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    dispatchAppState({ type: 'LOGOUT_CONFIRM' });\n    setLoginAttemptActive(() => false);\n  };\n\n  // Ascertain the status of the components tutorial-animation state\n  const animationClassName = validateClassName(\n    animationId,\n    COMPONENT_ID,\n    'sidebar-pulse-animation'\n  );\n\n  return (\n    <button\n      name=\"account-access\"\n      className={`sidebar-component account-access-component ${animationClassName}`}\n      onClick={clickHandler}\n    >\n      <>\n        <FontAwesomeIcon icon={['far', 'sign-out']} />\n        <p className=\"sidebar-component-label\">Sign-Out</p>\n      </>\n    </button>\n  );\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useContext } from 'react';\nimport { AnimationIdContext } from '../../../App';\nimport { validateListOfClassNames } from '../../../helpers/validate-class-name-list';\n\nconst COMPONENT_IDS = ['TUTORIAL', 'EJECT'];\n\nexport const TutorialButton = ({ appState, dispatchAppState }) => {\n  const { animationId, setAnimationId } = useContext(AnimationIdContext);\n\n  const clickHandler = () => {\n    dispatchAppState({ type: appState.tutorial ? 'RETURN' : 'TUTORIAL' });\n    // Tutorial will no longer pulse after first click\n    setAnimationId(null);\n  };\n\n  const animationClassName = validateListOfClassNames(\n    animationId,\n    COMPONENT_IDS,\n    'sidebar-pulse-animation'\n  );\n\n  return (\n    <button\n      className={`sidebar-component ${animationClassName}`}\n      onClick={clickHandler}\n    >\n      {appState.tutorial ? (\n        <>\n          <FontAwesomeIcon icon={['far', 'eject']} />\n        </>\n      ) : (\n        <FontAwesomeIcon icon={['far', 'book']} />\n      )}\n      <p className=\"sidebar-component-label\">Tutorial Mode</p>\n    </button>\n  );\n};\n","export const validateListOfClassNames = (activeID, currentIDs, className) => {\n  return currentIDs.includes(activeID) ? className : '';\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useContext } from 'react';\nimport { AnimationIdContext } from '../../../App';\nimport { validateClassName } from '../../../helpers/validate-class-name';\n\nconst COMPONENT_ID = 'SAVE';\n\nexport const SaveButton = ({\n  dispatchAppState,\n  appState,\n  setLoginAttemptActive,\n}) => {\n  const { animationId } = useContext(AnimationIdContext);\n\n  const animationClassName = validateClassName(\n    animationId,\n    COMPONENT_ID,\n    'sidebar-pulse-animation'\n  );\n\n  const clickHandler = () => {\n    if (appState.signedIn) {\n      dispatchAppState({\n        type: 'SAVE',\n        dispatchAppState: dispatchAppState,\n      });\n    } else {\n      // Need to login prior to being able use save functionality\n      dispatchAppState({\n        type: 'LOGIN',\n        dispatchAppState: dispatchAppState,\n        setLoginAttemptActive: setLoginAttemptActive,\n      });\n      setLoginAttemptActive(() => true);\n    }\n  };\n\n  return (\n    <button\n      className={`sidebar-component account-access-component ${animationClassName}`}\n      onClick={clickHandler}\n    >\n      <FontAwesomeIcon icon={['far', 'file-upload']} />\n      <p className=\"sidebar-component-label\">Save</p>\n    </button>\n  );\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { AnimationIdContext } from '../../../App';\nimport { useContext } from 'react';\nimport { validateClassName } from '../../../helpers/validate-class-name';\n\nconst COMPONENT_ID = 'LOAD';\n\nexport const LoadButton = ({\n  dispatchAppState,\n  appState,\n  setLoginAttemptActive,\n}) => {\n  const { animationId } = useContext(AnimationIdContext);\n  const animationClassName = validateClassName(\n    animationId,\n    COMPONENT_ID,\n    'sidebar-pulse-animation'\n  );\n\n  const clickHandler = () => {\n    if (appState.signedIn) {\n      dispatchAppState({\n        type: 'LOAD',\n        dispatchAppState: dispatchAppState,\n      });\n    } else {\n      // Need to login prior to being able use load functionality\n      dispatchAppState({\n        type: 'LOGIN',\n        dispatchAppState: dispatchAppState,\n        setLoginAttemptActive: setLoginAttemptActive,\n      });\n      setLoginAttemptActive(() => true);\n    }\n  };\n\n  return (\n    <button\n      className={`sidebar-component ${animationClassName}`}\n      onClick={clickHandler}\n    >\n      <FontAwesomeIcon icon={['far', 'file-download']} />\n      <p className=\"sidebar-component-label\">Load</p>\n    </button>\n  );\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useContext } from 'react';\nimport { AnimationIdContext } from '../../../App';\nimport { validateClassName } from '../../../helpers/validate-class-name';\n\nconst COMPONENT_ID = 'GENERATIVE_MODE';\n\nexport const GenerativeButton = ({ appState, dispatchAppState }) => {\n  const { animationId } = useContext(AnimationIdContext);\n  const animationClassName = validateClassName(\n    animationId,\n    COMPONENT_ID,\n    'sidebar-pulse-animation'\n  );\n\n  const clickHandler = () => {\n    dispatchAppState({\n      type: appState.generative ? 'GENERATIVE_OFF' : 'GENERATIVE',\n    });\n  };\n\n  return (\n    <button\n      className={`sidebar-component account-access-component ${animationClassName}`}\n      onClick={clickHandler}\n    >\n      {appState.generative ? (\n        <FontAwesomeIcon icon={['far', 'pause-circle']} />\n      ) : (\n        <FontAwesomeIcon icon={['far', 'play-circle']} />\n      )}\n      <p className=\"sidebar-component-label\">Generative Mode</p>\n    </button>\n  );\n};\n","import { LogInButton } from '../buttons/LogInButton';\nimport { LogOutButton } from '../buttons/LogOutButton';\nimport { TutorialButton } from '../buttons/TutorialButton';\nimport { SaveButton } from '../buttons/SaveButton';\nimport { LoadButton } from '../buttons/LoadButton';\nimport { GenerativeButton } from '../buttons/GenerativeButton';\nimport { useContext } from 'react';\nimport { DisplayVisibleContext } from '../../../App';\n\nexport const NavBarContainer = ({\n  appState,\n  dispatchAppState,\n  setLoginAttemptActive,\n  loginAttemptActive,\n}) => {\n  const { displayVisible } = useContext(DisplayVisibleContext);\n\n  return (\n    <nav\n      className=\"sidebar-container\"\n      style={displayVisible ? {} : { display: 'none' }}\n    >\n      <GenerativeButton\n        appState={appState}\n        dispatchAppState={dispatchAppState}\n      />\n      {appState.signedIn ? (\n        <LogOutButton\n          dispatchAppState={dispatchAppState}\n          setLoginAttemptActive={setLoginAttemptActive}\n        />\n      ) : (\n        <LogInButton\n          dispatchAppState={dispatchAppState}\n          appState={appState}\n          loginAttemptActive={loginAttemptActive}\n          setLoginAttemptActive={setLoginAttemptActive}\n        />\n      )}\n      <LoadButton\n        dispatchAppState={dispatchAppState}\n        appState={appState}\n        setLoginAttemptActive={setLoginAttemptActive}\n      />\n      <SaveButton\n        dispatchAppState={dispatchAppState}\n        appState={appState}\n        setLoginAttemptActive={setLoginAttemptActive}\n      />\n      <TutorialButton appState={appState} dispatchAppState={dispatchAppState} />\n    </nav>\n  );\n};\n","export const currentComponentIsInFocus = (id) => {\n  return document.activeElement.className.includes(id);\n};\n","import { useEffect, useCallback, useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { AnimationIdContext } from '../../../../../App';\nimport { validateClassName } from '../../../../../helpers/validate-class-name';\nimport { currentComponentIsInFocus } from '../../../../../helpers/current-component-is-in-focus';\n\nconst COMPONENT_ID = 'MUTE';\n\nexport const MuteButton = ({ appState, dispatchAppState }) => {\n  const { animationId } = useContext(AnimationIdContext);\n  const animationClassName = validateClassName(\n    animationId,\n    COMPONENT_ID,\n    'grid-panel-pulse-animation'\n  );\n\n  const clickHandler = () => {\n    dispatchAppState({ type: appState.mute ? 'UNMUTE' : 'MUTE' });\n  };\n\n  const keyDownHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter' && currentComponentIsInFocus(COMPONENT_ID)) {\n        dispatchAppState({ type: appState.mute ? 'UNMUTE' : 'MUTE' });\n      }\n    },\n    [appState.mute, dispatchAppState]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', keyDownHandler);\n    return () => document.removeEventListener('keydown', keyDownHandler);\n  }, [dispatchAppState, keyDownHandler]);\n\n  return (\n    <div\n      className={`grid-panel MUTE utility-panel ${animationClassName}`}\n      onClick={clickHandler}\n      tabIndex={0}\n    >\n      <FontAwesomeIcon\n        icon={['far', appState.mute ? 'volume-off' : 'volume']}\n      />\n    </div>\n  );\n};\n","import { useEffect, useCallback, useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { AnimationIdContext } from '../../../../../App';\nimport { AudioComponentsContext } from '../../../../../App';\nimport { validateClassName } from '../../../../../helpers/validate-class-name';\nimport { currentComponentIsInFocus } from '../../../../../helpers/current-component-is-in-focus';\n\nconst COMPONENT_ID = 'RESET';\n\nexport const ResetButton = ({ dispatchAppState }) => {\n  const { animationId } = useContext(AnimationIdContext);\n  const { setResetState } = useContext(AudioComponentsContext);\n\n  const animationClassName = validateClassName(\n    animationId,\n    COMPONENT_ID,\n    'grid-panel-pulse-animation'\n  );\n\n  const clickHandler = () => {\n    setResetState((prev) => !prev);\n    dispatchAppState({ type: 'RESET' });\n  };\n\n  const keyDownHandler = useCallback(\n    (event) => {\n      if (event.key === 'Enter' && currentComponentIsInFocus(COMPONENT_ID)) {\n        setResetState((prev) => !prev);\n        dispatchAppState({ type: 'RESET' });\n      }\n    },\n    [setResetState, dispatchAppState]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', keyDownHandler);\n    return () => document.removeEventListener('keydown', keyDownHandler);\n  }, [dispatchAppState, keyDownHandler]);\n\n  return (\n    <div\n      className={`grid-panel RESET clickable utility-panel ${animationClassName}`}\n      onClick={clickHandler}\n      tabIndex={0}\n    >\n      <FontAwesomeIcon icon={['far', 'redo']} />\n    </div>\n  );\n};\n","import { useContext } from 'react';\nimport { DisplayVisibleContext } from '../../../../../App';\nimport { MuteButton } from '../buttons/MuteButton';\nimport { ResetButton } from '../buttons/ResetButton';\n\nexport const UtilitiesContainer = ({ appState, dispatchAppState }) => {\n  const { displayVisible } = useContext(DisplayVisibleContext);\n  return (\n    <>\n      <div style={displayVisible ? {} : { display: 'none' }}>\n        <MuteButton appState={appState} dispatchAppState={dispatchAppState} />\n      </div>\n\n      <div style={displayVisible ? {} : { display: 'none' }}>\n        <ResetButton appState={appState} dispatchAppState={dispatchAppState} />\n      </div>\n    </>\n  );\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useContext } from 'react';\nimport { AnimationIdContext } from '../../../../../../App';\n\nconst WAVE_COMPONENT_ID = 'WAVE';\n\nexport const WaveButton = ({ waveType, setWaveShape, index }) => {\n  const { animationId } = useContext(AnimationIdContext);\n\n  const generateAnimationStyle = (time) => {\n    return WAVE_COMPONENT_ID === animationId\n      ? {\n          animation: `waveshape-pulse 3s infinite`,\n          animationDelay: `${time}s`,\n        }\n      : {};\n  };\n\n  const clickHandler = () => {\n    setWaveShape(waveType);\n  };\n\n  return (\n    <button onClick={clickHandler}>\n      <FontAwesomeIcon\n        icon={['far', `wave-${waveType}`]}\n        className={`wave-icon`}\n        style={generateAnimationStyle(index)}\n      />\n    </button>\n  );\n};\n","import { useEffect, useRef, useContext } from 'react';\nimport { AudioComponentsContext } from '../../../App';\n\nexport const RenameModal = ({\n  currentLabel,\n  setCurrentLabel,\n  setDisplayVisible,\n  type,\n  setShowRenameModal,\n}) => {\n  const { oscillators, setOscillators, fx, setFx } = useContext(\n    AudioComponentsContext\n  );\n  const inputTextBox = useRef(null);\n\n  /**\n   * Reverts to default display mode on Escape key input\n   */\n  useEffect(() => {\n    inputTextBox.current.focus();\n    const keyDownHandler = (event) => {\n      if (event.key === 'Escape') {\n        setDisplayVisible(() => true);\n        setShowRenameModal(() => false);\n      }\n    };\n\n    window.addEventListener('keydown', keyDownHandler);\n    return () => {\n      window.removeEventListener('keydown', keyDownHandler);\n    };\n  }, [setDisplayVisible, setShowRenameModal]);\n\n  /**\n   * Reverts to default display mode on form submit\n   */\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    // Update labels in context so UI maps directly to the save state\n    setOscillators(() => {\n      return oscillators.map((elem) => {\n        if (elem.type === type) elem.label = currentLabel;\n        return elem;\n      });\n    });\n\n    setFx(() => {\n      return fx.map((elem) => {\n        if (elem.type === type) elem.label = currentLabel;\n        return elem;\n      });\n    });\n    setDisplayVisible(() => true);\n    setShowRenameModal(() => false);\n  };\n\n  // Updates current unit display value dynamically according to user input\n  const updateLabel = (event) => setCurrentLabel(() => event.target.value);\n\n  return (\n    <div className=\"modal\">\n      <form onSubmit={onSubmitHandler}>\n        <label htmlFor=\"input-text-field\">\n          <h2>Rename {currentLabel}</h2>\n        </label>\n        <input\n          type=\"text\"\n          onChange={updateLabel}\n          ref={inputTextBox}\n          className=\"input-text-field\"\n          name=\"input-text-field\"\n        ></input>\n      </form>\n      <br />\n    </div>\n  );\n};\n","export const defaultOscillatorSettings = {\n  DEFAULT_WAVE_TYPES: ['sine', 'square', 'triangle'],\n  DEFAULT_FREQUENCY: 440,\n  DEFAULT_WAVESHAPE: 'triangle',\n  DEFAULT_MIN_FREQUENCY: 0,\n  DEFAULT_MAX_FREQUENCY: 2000,\n  DEFAULT_VOLUME: -129.9,\n  DEFAULT_MIN_VOLUME: -130,\n  DEFAULT_MAX_VOLUME: 0,\n  DEFAULT_OSCILLATOR_LABELS: [\n    'Oscillator A',\n    'Oscillator B',\n    'Oscillator C',\n    'Oscillator D',\n  ],\n};\n","import { useState, useEffect, useRef, useContext } from 'react';\nimport { AnimationIdContext, DisplayVisibleContext } from '../../../../../App';\nimport { WaveButton } from './components/WaveButton';\nimport { validateClassName } from '../../../../../helpers/validate-class-name';\nimport { RenameModal } from '../../../modals/RenameModal';\nimport { defaultOscillatorSettings } from '../../../../../data/default-oscillator-settings';\nimport { Slider } from '@mui/material';\nimport uniqueId from 'lodash/uniqueId';\n\n// GLOBAL CONSTANTS\nconst GROUP_COMPONENT_ID = 'ALLOSCILLATORS';\nconst COMPONENT_ID = 'OSCILLATOR';\n\nconst {\n  DEFAULT_WAVE_TYPES,\n  DEFAULT_FREQUENCY,\n  DEFAULT_WAVESHAPE,\n  DEFAULT_MIN_FREQUENCY,\n  DEFAULT_MAX_FREQUENCY,\n  DEFAULT_VOLUME,\n  DEFAULT_MIN_VOLUME,\n  DEFAULT_MAX_VOLUME,\n} = defaultOscillatorSettings;\n\nexport const OscillatorPanel = ({ appState, oscillator, resetState }) => {\n  const { unit, label, reset, type } = oscillator;\n\n  /**\n   * Animation State\n   */\n  const { animationId } = useContext(AnimationIdContext);\n  const { displayVisible, setDisplayVisible } = useContext(\n    DisplayVisibleContext\n  );\n\n  /**\n   * Tutorial Animation Logic\n   */\n  const renameAnimationClassName = validateClassName(\n    animationId,\n    COMPONENT_ID,\n    'grid-panel-title-pulse-animation'\n  );\n  const allOscillatorAnimationClassName = validateClassName(\n    animationId,\n    GROUP_COMPONENT_ID,\n    'grid-panel-pulse-animation'\n  );\n\n  /**\n   * Label State\n   */\n  const [currentLabel, setCurrentLabel] = useState(label);\n  useEffect(() => setCurrentLabel(label), [label]);\n\n  /**\n   * Label Rename Logic\n   */\n  const [showRenameModal, setShowRenameModal] = useState(false);\n  const doubleClickHandler = () => {\n    setDisplayVisible(() => false);\n    setShowRenameModal(() => true);\n  };\n\n  /**\n   * Pitch State\n   */\n  const [frequency, setFrequency] = useState(DEFAULT_FREQUENCY);\n  const frequencySlider = useRef(null);\n  useEffect(() => (unit.frequency.value = frequency), [frequency, unit]);\n\n  /**\n   * Volume State\n   */\n  const [volume, setVolume] = useState(DEFAULT_VOLUME);\n  const volumeSlider = useRef(null);\n  useEffect(() => {\n    if (appState.mute) unit.volume.value = DEFAULT_VOLUME;\n    else {\n      unit.volume.value = volume;\n      setVolume(unit.volume.value);\n    }\n  }, [appState.mute, unit, volume]);\n\n  /**\n   * Waveshape State\n   */\n  const [waveShape, setWaveShape] = useState(DEFAULT_WAVESHAPE);\n  useEffect(() => (unit.type = waveShape), [unit, waveShape]);\n\n  /**\n   * Load logic\n   */\n  useEffect(() => setFrequency(unit.frequency.value), [unit.frequency.value]);\n  useEffect(() => setVolume(unit.volume.value), [unit.volume.value]);\n\n  /**\n   * Reset Mode Logic\n   */\n  useEffect(() => {\n    setVolume(DEFAULT_VOLUME);\n    setFrequency(DEFAULT_FREQUENCY);\n    setWaveShape(DEFAULT_WAVESHAPE);\n    reset();\n  }, [resetState, reset]);\n\n  return (\n    <>\n      <div\n        className={`grid-panel ${allOscillatorAnimationClassName}`}\n        onDoubleClick={doubleClickHandler}\n        style={displayVisible ? {} : { display: 'none' }}\n      >\n        <h4 className={renameAnimationClassName}>{currentLabel}</h4>\n\n        <div className=\"wave-buttons-container\">\n          {DEFAULT_WAVE_TYPES.map((waveType, index) => {\n            return (\n              <WaveButton\n                waveType={waveType}\n                index={index}\n                key={uniqueId('waveShape')}\n                setWaveShape={setWaveShape}\n              />\n            );\n          })}\n        </div>\n\n        <label htmlFor=\"volume-slider\">Volume</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"volume-slider\"\n            ref={volumeSlider}\n            value={volume}\n            min={DEFAULT_MIN_VOLUME}\n            max={DEFAULT_MAX_VOLUME}\n            size=\"small\"\n            defaultValue={DEFAULT_VOLUME}\n            style={{ color: 'black', height: '0.1rem', zIndex: '0' }}\n            onChange={(event) => {\n              setVolume(event.target.value);\n            }}\n          />\n        </div>\n\n        <label htmlFor=\"frequency-slider\">Pitch</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"frequency-slider\"\n            ref={frequencySlider}\n            value={frequency}\n            min={DEFAULT_MIN_FREQUENCY}\n            max={DEFAULT_MAX_FREQUENCY}\n            size=\"small\"\n            defaultValue={DEFAULT_FREQUENCY}\n            style={{ color: 'black', height: '0.1rem' }}\n            onChange={(event) => {\n              setFrequency(event.target.value);\n            }}\n          />\n        </div>\n      </div>\n      {showRenameModal ? (\n        <div className=\"modal-container\">\n          <RenameModal\n            currentLabel={currentLabel}\n            setCurrentLabel={setCurrentLabel}\n            type={type}\n            setDisplayVisible={setDisplayVisible}\n            setShowRenameModal={setShowRenameModal}\n          />\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n","import { AudioComponentsContext } from '../../../../../App';\nimport { OscillatorPanel } from '../panels/OscillatorPanel';\nimport { useContext } from 'react';\n// import uniqueId from 'lodash/uniqueId';\n\nexport const OscillatorContainer = ({ appState }) => {\n  const { oscillators, resetState } = useContext(AudioComponentsContext);\n\n  return (\n    <>\n      {oscillators.map((elem, index) => (\n        <OscillatorPanel\n          /* \n          Key is used as index as this is the rare instance \n          where ordering will never change, and does not \n          need to be futureproofed \n          */\n          key={index}\n          oscillator={elem}\n          appState={appState}\n          resetState={resetState}\n        />\n      ))}\n    </>\n  );\n};\n","import { useContext, useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { AnimationIdContext, DisplayVisibleContext } from '../../../../../App';\nimport { validateClassName } from '../../../../../helpers/validate-class-name';\nimport { RenameModal } from '../../../modals/RenameModal';\nimport { Slider } from '@mui/material';\n\nconst id = 'FX';\nconst groupId = 'ALLFX';\n\nexport const TremoloPanel = ({ fx, resetState }) => {\n  const { unit, label, type, parameters } = fx;\n  const [depth, speed, wet] = parameters;\n\n  /**\n   * All view logic\n   */\n  const [showRenameModal, setShowRenameModal] = useState(false);\n  const { animationId } = useContext(AnimationIdContext);\n  const { displayVisible, setDisplayVisible } = useContext(\n    DisplayVisibleContext\n  );\n  const doubleClickHandler = () => {\n    setDisplayVisible(() => false);\n    setShowRenameModal(() => true);\n  };\n\n  const panelAnimationClassName = validateClassName(\n    animationId,\n    id,\n    'grid-panel-pulse-animation'\n  );\n\n  const labelAnimationClassName = validateClassName(\n    animationId,\n    label.toUpperCase(),\n    'grid-panel-title-pulse-animation'\n  );\n\n  const groupAnimationClassName = validateClassName(\n    animationId,\n    groupId,\n    'grid-panel-title-pulse-animation'\n  );\n\n  const [currentLabel, setCurrentLabel] = useState(label);\n  useEffect(() => {\n    setCurrentLabel(label);\n  }, [label]);\n\n  /**\n   * All audio state\n   */\n  const [depthValue, setDepthValue] = useState(depth.defaultValue * 100);\n  const depthSlider = useRef(null);\n  useEffect(() => (unit.depth.value = depthValue / 100), [depthValue, unit]);\n\n  const [speedValue, setSpeedValue] = useState(speed.defaultValue * 100);\n  const speedSlider = useRef(null);\n  useEffect(\n    () => (unit.frequency.value = speedValue / 100),\n    [speedValue, unit]\n  );\n\n  const [wetValue, setWetValue] = useState(wet.defaultValue * 100);\n  const wetSlider = useRef(null);\n  useEffect(() => (unit.wet.value = wetValue / 100), [wetValue, unit]);\n\n  /**\n   * All reset logic\n   */\n  useEffect(() => {\n    setDepthValue(depth.defaultValue * 100);\n    setSpeedValue(speed.defaultValue * 100);\n    setWetValue(wet.defaultValue * 100);\n    depth.reset();\n    speed.reset();\n    wet.reset();\n  }, [resetState, depth, wet, speed]);\n\n  /**\n   * All load logic\n   */\n  useEffect(() => {\n    setDepthValue(unit.depth.value * 100);\n    setSpeedValue(unit.frequency.value * 100);\n    setWetValue(unit.wet.value * 100);\n  }, [unit.depth.value, unit.wet.value, unit.frequency.value]);\n\n  return (\n    <>\n      <div\n        className={`grid-panel ${panelAnimationClassName}`}\n        onDoubleClick={doubleClickHandler}\n        style={displayVisible ? {} : { display: 'none' }}\n      >\n        <h4 className={`${labelAnimationClassName} ${groupAnimationClassName}`}>\n          {currentLabel}\n        </h4>\n\n        <label htmlFor={'depth-slider'}>{depth.label}</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"depth-slider\"\n            ref={depthSlider}\n            value={depthValue}\n            min={depth.min}\n            max={depth.max * 100}\n            size=\"small\"\n            defaultValue={depth.defaultValue * 100}\n            style={{ color: 'black', height: '0.1rem' }}\n            onChange={(event) => setDepthValue(event.target.value)}\n          />\n        </div>\n\n        <label htmlFor=\"speed-slider\">{speed.label}</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"speed-slider\"\n            ref={speedSlider}\n            value={speedValue}\n            min={speed.min}\n            max={speed.max * 100}\n            size=\"small\"\n            defaultValue={speed.defaultValue * 100}\n            style={{ color: 'black', height: '0.1rem' }}\n            onChange={(event) => setSpeedValue(event.target.value)}\n          />\n        </div>\n\n        <label htmlFor=\"wet-slider\">{wet.label}</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"parameter-slider\"\n            ref={wetSlider}\n            value={wetValue}\n            min={wet.min}\n            max={wet.max * 100}\n            size=\"small\"\n            defaultValue={wet.defaultValue * 100}\n            style={{ color: 'black', height: '0.1rem' }}\n            onChange={(event) => setWetValue(event.target.value)}\n          />\n        </div>\n        <FontAwesomeIcon icon={['far', 'waveform-path']} />\n      </div>\n      {showRenameModal ? (\n        <div className=\"modal-container\">\n          <RenameModal\n            currentLabel={currentLabel}\n            setCurrentLabel={setCurrentLabel}\n            type={type}\n            setDisplayVisible={setDisplayVisible}\n            setShowRenameModal={setShowRenameModal}\n          />\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n","import { useContext, useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { AnimationIdContext, DisplayVisibleContext } from '../../../../../App';\nimport { validateClassName } from '../../../../../helpers/validate-class-name';\nimport { RenameModal } from '../../../modals/RenameModal';\nimport { Slider } from '@mui/material';\n\nconst id = 'FX';\nconst groupId = 'ALLFX';\n\nexport const DelayPanel = ({ fx, resetState }) => {\n  const { unit, label, type, parameters } = fx;\n  const [time, repeats, wet] = parameters;\n\n  /**\n   * All view logic\n   */\n  const { animationId } = useContext(AnimationIdContext);\n  const { displayVisible, setDisplayVisible } = useContext(\n    DisplayVisibleContext\n  );\n  const doubleClickHandler = () => {\n    setDisplayVisible(() => false);\n    setShowRenameModal(() => true);\n  };\n\n  const panelAnimationClassName = validateClassName(\n    animationId,\n    id,\n    'grid-panel-pulse-animation'\n  );\n\n  const labelAnimationClassName = validateClassName(\n    animationId,\n    label.toUpperCase(),\n    'grid-panel-title-pulse-animation'\n  );\n\n  const groupAnimationClassName = validateClassName(\n    animationId,\n    groupId,\n    'grid-panel-title-pulse-animation'\n  );\n\n  const [currentLabel, setCurrentLabel] = useState(label);\n  useEffect(() => setCurrentLabel(label), [label]);\n\n  const [showRenameModal, setShowRenameModal] = useState(false);\n\n  /**\n   * All audio state\n   */\n  const [timeValue, setTimeValue] = useState(time.defaultValue * 100);\n  const timeSlider = useRef(null);\n  useEffect(() => (unit.delayTime.value = timeValue / 100), [timeValue, unit]);\n\n  const [repeatsValue, setRepeatsValue] = useState(repeats.defaultValue * 100);\n  const repeatsSlider = useRef(null);\n  useEffect(\n    () => (unit.feedback.value = repeatsValue / 100),\n    [repeatsValue, unit]\n  );\n\n  const [wetValue, setWetValue] = useState(wet.defaultValue * 100);\n  const wetSlider = useRef(null);\n  useEffect(() => (unit.wet.value = wetValue / 100), [wetValue, unit]);\n\n  /**\n   * All reset logic\n   */\n  useEffect(() => {\n    setTimeValue(time.defaultValue * 100);\n    setRepeatsValue(repeats.defaultValue * 100);\n    setWetValue(wet.defaultValue * 100);\n    time.reset();\n    repeats.reset();\n    wet.reset();\n  }, [resetState, time, wet, repeats]);\n\n  /**\n   * All load logic\n   */\n  useEffect(() => {\n    setTimeValue(unit.delayTime.value * 100);\n    setRepeatsValue(unit.feedback.value * 100);\n    setWetValue(unit.wet.value * 100);\n  }, [unit.delayTime.value, unit.wet.value, unit.feedback.value]);\n\n  return (\n    <>\n      <div\n        className={`grid-panel ${panelAnimationClassName}`}\n        onDoubleClick={doubleClickHandler}\n        style={displayVisible ? {} : { display: 'none' }}\n      >\n        <h4 className={`${labelAnimationClassName} ${groupAnimationClassName}`}>\n          {currentLabel}\n        </h4>\n\n        <label htmlFor={'time-slider'}>{time.label}</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"time-slider\"\n            ref={timeSlider}\n            value={timeValue}\n            min={time.min}\n            max={time.max * 100}\n            size=\"small\"\n            defaultValue={time.defaultValue * 100}\n            style={{ color: 'black', height: '0.1rem' }}\n            onChange={(event) => setTimeValue(event.target.value)}\n          />\n        </div>\n\n        <label htmlFor={'repeats-slider'}>{repeats.label}</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"repeats-slider\"\n            ref={repeatsSlider}\n            value={repeatsValue}\n            min={repeats.min}\n            max={repeats.max * 100}\n            size=\"small\"\n            defaultValue={repeats.defaultValue * 100}\n            style={{ color: 'black', height: '0.1rem' }}\n            onChange={(event) => setRepeatsValue(event.target.value)}\n          />\n        </div>\n\n        <label htmlFor={'wet-slider'}>{wet.label}</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"parameter-slider\"\n            ref={wetSlider}\n            value={wetValue}\n            min={wet.min}\n            max={wet.max * 100}\n            size=\"small\"\n            defaultValue={wet.defaultValue * 100}\n            style={{ color: 'black', height: '0.1rem' }}\n            onChange={(event) => setWetValue(event.target.value)}\n          />\n        </div>\n        <FontAwesomeIcon icon={['far', 'waveform-path']} />\n      </div>\n      {showRenameModal ? (\n        <div className=\"modal-container\">\n          <RenameModal\n            currentLabel={currentLabel}\n            setCurrentLabel={setCurrentLabel}\n            type={type}\n            setDisplayVisible={setDisplayVisible}\n            setShowRenameModal={setShowRenameModal}\n          />\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n","import { useContext, useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { AnimationIdContext, DisplayVisibleContext } from '../../../../../App';\nimport { validateClassName } from '../../../../../helpers/validate-class-name';\nimport { RenameModal } from '../../../modals/RenameModal';\nimport { Slider } from '@mui/material';\n\nconst id = 'FX';\nconst groupId = 'ALLFX';\n\nexport const ReverbPanel = ({ fx, resetState }) => {\n  const { unit, label, type, parameters } = fx;\n  const [size, wet] = parameters;\n\n  /**\n   * All view logic\n   */\n  const { animationId } = useContext(AnimationIdContext);\n  const { displayVisible, setDisplayVisible } = useContext(\n    DisplayVisibleContext\n  );\n  const doubleClickHandler = () => {\n    setDisplayVisible(() => false);\n    setShowRenameModal(() => true);\n  };\n\n  const panelAnimationClassName = validateClassName(\n    animationId,\n    id,\n    'grid-panel-pulse-animation'\n  );\n\n  const labelAnimationClassName = validateClassName(\n    animationId,\n    label.toUpperCase(),\n    'grid-panel-title-pulse-animation'\n  );\n\n  const groupAnimationClassName = validateClassName(\n    animationId,\n    groupId,\n    'grid-panel-title-pulse-animation'\n  );\n\n  const [currentLabel, setCurrentLabel] = useState(label);\n  useEffect(() => {\n    setCurrentLabel(label);\n  }, [label]);\n\n  const [showRenameModal, setShowRenameModal] = useState(false);\n\n  /**\n   * All audio state\n   */\n  const [sizeValue, setSizeValue] = useState(size.defaultValue * 100);\n  const sizeSlider = useRef(null);\n  useEffect(() => (unit.decay = sizeValue / 100), [sizeValue, unit]);\n\n  const [wetValue, setWetValue] = useState(wet.defaultValue * 100);\n  const wetSlider = useRef(null);\n  useEffect(() => (unit.wet.value = wetValue / 100), [wetValue, unit]);\n\n  /**\n   * All reset logic\n   */\n  useEffect(() => {\n    setSizeValue(size.defaultValue * 100);\n    setWetValue(wet.defaultValue * 100);\n    size.reset();\n    wet.reset();\n  }, [resetState, size, wet]);\n\n  /**\n   * All load logic\n   */\n  useEffect(() => {\n    setSizeValue(unit.decay * 100);\n    setWetValue(unit.wet.value * 100);\n  }, [unit.decay, unit.wet.value]);\n\n  return (\n    <>\n      <div\n        className={`grid-panel ${panelAnimationClassName}`}\n        onDoubleClick={doubleClickHandler}\n        style={displayVisible ? {} : { display: 'none' }}\n      >\n        <h4 className={`${labelAnimationClassName} ${groupAnimationClassName}`}>\n          {currentLabel}\n        </h4>\n\n        <label htmlFor={'size-slider'}>{size.label}</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"size-slider\"\n            ref={sizeSlider}\n            value={sizeValue}\n            min={size.min}\n            max={size.max * 100}\n            size=\"small\"\n            defaultValue={size.defaultValue * 100}\n            style={{ color: 'black', height: '0.1rem' }}\n            onChange={(event) => setSizeValue(event.target.value)}\n          />\n        </div>\n\n        <label htmlFor={'wet-slider'}>{wet.label}</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"parameter-slider\"\n            ref={wetSlider}\n            value={wetValue}\n            min={wet.min}\n            max={wet.max * 100}\n            size=\"small\"\n            defaultValue={wet.defaultValue * 100}\n            style={{ color: 'black', height: '0.1rem' }}\n            onChange={(event) => setWetValue(event.target.value)}\n          />\n        </div>\n\n        <FontAwesomeIcon icon={['far', 'waveform-path']} />\n      </div>\n      {showRenameModal ? (\n        <div className=\"modal-container\">\n          <RenameModal\n            currentLabel={currentLabel}\n            setCurrentLabel={setCurrentLabel}\n            type={type}\n            setDisplayVisible={setDisplayVisible}\n            setShowRenameModal={setShowRenameModal}\n          />\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n","import { useContext, useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { AnimationIdContext, DisplayVisibleContext } from '../../../../../App';\nimport { validateClassName } from '../../../../../helpers/validate-class-name';\nimport { RenameModal } from '../../../modals/RenameModal';\nimport { Slider } from '@mui/material';\n\nconst id = 'FX';\nconst groupId = 'ALLFX';\n\nexport const DistortionPanel = ({ fx, resetState }) => {\n  const { unit, label, type, parameters } = fx;\n  const [dirt, wet] = parameters;\n\n  /**\n   * All view logic\n   */\n  const { animationId } = useContext(AnimationIdContext);\n  const { displayVisible, setDisplayVisible } = useContext(\n    DisplayVisibleContext\n  );\n  const doubleClickHandler = () => {\n    setDisplayVisible(() => false);\n    setShowRenameModal(() => true);\n  };\n\n  const panelAnimationClassName = validateClassName(\n    animationId,\n    id,\n    'grid-panel-pulse-animation'\n  );\n\n  const labelAnimationClassName = validateClassName(\n    animationId,\n    label.toUpperCase(),\n    'grid-panel-title-pulse-animation'\n  );\n\n  const groupAnimationClassName = validateClassName(\n    animationId,\n    groupId,\n    'grid-panel-title-pulse-animation'\n  );\n\n  const [currentLabel, setCurrentLabel] = useState(label);\n  useEffect(() => {\n    setCurrentLabel(label);\n  }, [label]);\n\n  const [showRenameModal, setShowRenameModal] = useState(false);\n\n  /**\n   * All audio state\n   */\n  const [dirtValue, setDirtValue] = useState(dirt.defaultValue * 100);\n  const dirtSlider = useRef(null);\n  useEffect(() => (unit.distortion = dirtValue / 100), [dirtValue, unit]);\n\n  const [wetValue, setWetValue] = useState(wet.defaultValue * 100);\n  const wetSlider = useRef(null);\n  useEffect(() => (unit.wet.value = wetValue / 100), [wetValue, unit]);\n\n  /**\n   * All reset logic\n   */\n  useEffect(() => {\n    setDirtValue(dirt.defaultValue * 100);\n    setWetValue(wet.defaultValue * 100);\n    dirt.reset();\n    wet.reset();\n  }, [resetState, dirt, wet]);\n\n  /**\n   * All load logic\n   */\n  useEffect(() => {\n    setDirtValue(unit.distortion * 100);\n    setWetValue(unit.wet.value * 100);\n  }, [unit.distortion, unit.wet.value]);\n\n  return (\n    <>\n      <div\n        className={`grid-panel ${panelAnimationClassName}`}\n        onDoubleClick={doubleClickHandler}\n        style={displayVisible ? {} : { display: 'none' }}\n      >\n        <h4 className={`${labelAnimationClassName} ${groupAnimationClassName}`}>\n          {currentLabel}\n        </h4>\n\n        <label htmlFor={'dirt-slider'}>{dirt.label}</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"dirt-slider\"\n            ref={dirtSlider}\n            value={dirtValue}\n            min={dirt.min}\n            max={dirt.max * 100}\n            size=\"small\"\n            defaultValue={dirt.defaultValue * 100}\n            style={{ color: 'black', height: '0.1rem' }}\n            onChange={(event) => setDirtValue(event.target.value)}\n          />\n        </div>\n\n        <label htmlFor={'wet-slider'}>{wet.label}</label>\n        <div className=\"slider-wrapper\">\n          <Slider\n            name=\"parameter-slider\"\n            ref={wetSlider}\n            value={wetValue}\n            min={wet.min}\n            max={wet.max * 100}\n            size=\"small\"\n            defaultValue={wet.defaultValue * 100}\n            style={{ color: 'black', height: '0.1rem' }}\n            onChange={(event) => setWetValue(event.target.value)}\n          />\n        </div>\n\n        <FontAwesomeIcon icon={['far', 'waveform-path']} />\n      </div>\n      {showRenameModal ? (\n        <div className=\"modal-container\">\n          <RenameModal\n            currentLabel={currentLabel}\n            setCurrentLabel={setCurrentLabel}\n            type={type}\n            setDisplayVisible={setDisplayVisible}\n            setShowRenameModal={setShowRenameModal}\n          />\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n","import { TremoloPanel } from '../panels/TremoloPanel';\nimport { DelayPanel } from '../panels/DelayPanel';\nimport { ReverbPanel } from '../panels/ReverbPanel';\nimport { DistortionPanel } from '../panels/DistortionPanel';\nimport { useContext } from 'react';\nimport { AudioComponentsContext } from '../../../../../App';\n\nexport const FxContainer = ({ appState }) => {\n  const { fx, resetState } = useContext(AudioComponentsContext);\n  const [tremolo, delay, reverb, distortion] = fx;\n\n  return (\n    <>\n      <TremoloPanel fx={tremolo} appState={appState} resetState={resetState} />\n      <DelayPanel fx={delay} appState={appState} resetState={resetState} />\n      <ReverbPanel fx={reverb} appState={appState} resetState={resetState} />\n      <DistortionPanel\n        fx={distortion}\n        appState={appState}\n        resetState={resetState}\n      />\n    </>\n  );\n};\n","export const DisplayContainer = ({ appState }) => {\n  return <div>{appState.display}</div>;\n};\n","/* EXTERNAL COMPONENTS */\nimport { useContext } from 'react';\nimport { DisplayVisibleContext } from '../../../App';\nimport { UtilitiesContainer } from '../components/utilities/containers/UtilitiesContainer';\nimport { OscillatorContainer } from '../components/oscillators/containers/OscillatorContainer';\nimport { FxContainer } from '../components/fx/containers/FxContainer';\nimport { DisplayContainer } from '../components/title/containers/DisplayContainer';\n\nexport const GridPanelContainer = ({\n  appState,\n  dispatchAppState,\n  setDisplayVisible,\n}) => {\n  const { displayVisible } = useContext(DisplayVisibleContext);\n\n  return (\n    <div className=\"grid-panel-container\">\n      <header\n        className={'grid-panel title-panel'}\n        style={displayVisible ? {} : { display: 'none' }}\n      >\n        <DisplayContainer appState={appState} />\n      </header>\n      <UtilitiesContainer\n        appState={appState}\n        dispatchAppState={dispatchAppState}\n      />\n      <OscillatorContainer\n        appState={appState}\n        setDisplayVisible={setDisplayVisible}\n        displayVisible={displayVisible}\n      />\n      <FxContainer\n        appState={appState}\n        setDisplayVisible={setDisplayVisible}\n        displayVisible={displayVisible}\n      />\n    </div>\n  );\n};\n","import { TutorialController } from '../../../../../../controllers/TutorialController';\nimport { useState, useEffect, useCallback, useContext } from 'react';\nimport { AnimationIdContext } from '../../../../../../App';\n\nconst tutorialController = new TutorialController();\n\nexport const TutorialPanel = () => {\n  const { setAnimationId } = useContext(AnimationIdContext);\n  const [tutorialText, setTutorialText] = useState('');\n\n  /**\n   * Initiate tutorial state, triggering animations\n   * and display text\n   */\n  const updateTutorialState = useCallback(\n    ({ copy, animationId }) => {\n      setAnimationId(animationId);\n      setTutorialText(copy);\n    },\n    [setAnimationId, setTutorialText]\n  );\n\n  /**\n   * Provides tutorial navigation functionality\n   */\n  const keyDownHandler = useCallback(\n    (keydown) => {\n      const keyIsLeft = keydown.keyCode === 37;\n      const keyIsRight = keydown.keyCode === 39;\n      const tutorialHasPrevious = tutorialController.hasPrevious();\n      const tutorialHasNext = tutorialController.hasNext();\n\n      if (keyIsLeft && tutorialHasPrevious) {\n        updateTutorialState(tutorialController.previous());\n      } else if (keyIsRight && tutorialHasNext) {\n        updateTutorialState(tutorialController.next());\n      }\n    },\n    [updateTutorialState]\n  );\n\n  /**\n   * Setup and cleanup key event listeners\n   * throughout tutorial mode lifecycle\n   */\n  useEffect(() => {\n    updateTutorialState(tutorialController.start());\n    window.addEventListener('keydown', keyDownHandler);\n\n    return () => {\n      window.removeEventListener('keydown', keyDownHandler);\n      setAnimationId(null);\n    };\n  }, [setAnimationId, keyDownHandler, updateTutorialState]);\n\n  return (\n    <p className=\"title-panel\">\n      {tutorialText.split('\\n').map((line) => {\n        return (\n          <>\n            {line} <br />\n          </>\n        );\n      })}\n    </p>\n  );\n};\n","import { tutorialData } from '../data/tutorialData.json';\n/**\n * Handler for json data to be provided to and abstracted from the UI.\n */\n\nexport class TutorialController {\n  constructor() {\n    this.index = 0;\n  }\n\n  // Operation authentication on the data closure\n  hasNext = () => this.index < tutorialData.length - 1;\n  hasPrevious = () => this.index > 0;\n\n  // Data management functionality\n  next = () => tutorialData[++this.index];\n  previous = () => tutorialData[--this.index];\n  start = () => {\n    this.index = 0;\n    return tutorialData[this.index];\n  };\n}\n","import { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { defaultOscillatorSettings } from '../../../../../../data/default-oscillator-settings';\nimport { AudioComponentsContext } from '../../../../../../App';\n\nconst DEFAULT_TIME_INTERVAL = 10000;\n\nexport const GenerativePanel = () => {\n  const { DEFAULT_MIN_VOLUME, DEFAULT_MIN_FREQUENCY } =\n    defaultOscillatorSettings;\n  const { oscillators } = useContext(AudioComponentsContext);\n\n  useEffect(() => {\n    const previousSettings = oscillators.map((elem, index) => {\n      return {\n        id: index,\n        volume: elem.unit.volume.value,\n        frequency: elem.unit.frequency.value,\n      };\n    });\n\n    const volumeAutomations = previousSettings\n      .filter((elem) => elem.volume > -100)\n      .map((prev) => {\n        const randomInterval = Math.random() * DEFAULT_TIME_INTERVAL;\n        const pivotValue = (prev.volume + DEFAULT_MIN_VOLUME) / 2;\n\n        return setInterval(() => {\n          const randomValue =\n            Math.random() * (prev.volume - pivotValue) + pivotValue;\n          oscillators[prev.id].unit.volume.value = randomValue;\n        }, randomInterval);\n      });\n\n    const frequencyAutomations = previousSettings\n      .filter((elem) => elem.volume > -100)\n      .map((prev) => {\n        const randomInterval = Math.random() * DEFAULT_TIME_INTERVAL;\n\n        return setInterval(() => {\n          const randomValue =\n            Math.random() * (prev.frequency - DEFAULT_MIN_FREQUENCY) +\n            DEFAULT_MIN_FREQUENCY;\n\n          oscillators[prev.id].unit.frequency.value = randomValue;\n        }, randomInterval);\n      });\n\n    return () => {\n      volumeAutomations.forEach((elem) => clearInterval(elem));\n      frequencyAutomations.forEach((elem) => clearInterval(elem));\n\n      oscillators.forEach((elem, index) => {\n        elem.unit.volume.value = previousSettings[index].volume;\n        elem.unit.frequency.value = previousSettings[index].frequency;\n      });\n    };\n  }, [oscillators, DEFAULT_MIN_FREQUENCY, DEFAULT_MIN_VOLUME]);\n\n  return (\n    <header>\n      <h1 className=\"title-fade-in\">generative mode.</h1>\n    </header>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\n\nconst DEFAULT_TEXT = 'a generative synth.';\n\nexport const DefaultPanel = ({ text = DEFAULT_TEXT }) => {\n  const [currentText, setCurrentText] = useState(text);\n  const pendingTextUpdates = useRef(null);\n  const [animationActive, setAnimationActive] = useState(true);\n\n  /**\n   * Reset the default view after the notification message\n   * has been displayed\n   */\n  useEffect(() => {\n    if (text !== DEFAULT_TEXT) {\n      setAnimationActive(false);\n      setCurrentText(text);\n      pendingTextUpdates.current = setTimeout(() => {\n        setAnimationActive(true);\n        setCurrentText(DEFAULT_TEXT);\n      }, 2500);\n    }\n    return () => {\n      clearTimeout(pendingTextUpdates.current);\n    };\n  }, [text]);\n\n  return (\n    <div>\n      <h1\n        className=\"title-fade-in\"\n        style={animationActive ? { animation: 'fade-in ease 2s' } : {}}\n      >\n        {currentText}\n      </h1>\n    </div>\n  );\n};\n","import { DefaultPanel } from '../components/grid-panel/components/title/panels/playback-states/DefaultPanel';\n\nexport const defaultAppState = {\n  display: <DefaultPanel />,\n  generative: false,\n  tutorial: false,\n  reset: false,\n  signedIn: false,\n};\n","export const attemptLogin = async (data) => {\n  return await fetch('./login', {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'content-type': 'application/json',\n    },\n  });\n};\n","import { attemptLogin } from '../../../../../../helpers/attempt-login';\n\nexport const LoginFormPanel = ({ dispatchAppState, setLoginAttemptActive }) => {\n  const onSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const [username, password] = event.target;\n\n    const data = {\n      username: username.value,\n      password: password.value,\n    };\n\n    // try and login with username and password provided\n    const loginResponse = await attemptLogin(data);\n\n    // provide UI feedback on login response\n    if (loginResponse.status >= 200 && loginResponse.status <= 299) {\n      const json = await loginResponse.json();\n      // store login data for future sessions\n      localStorage.setItem('token', json.token);\n      localStorage.setItem('username', username.value);\n      dispatchAppState({ type: 'LOGIN_CONFIRM' });\n    } else {\n      dispatchAppState({ type: 'LOGIN_FAIL' });\n      setLoginAttemptActive(() => false);\n    }\n  };\n\n  const userRegisterHandler = () => {\n    dispatchAppState({\n      type: 'REGISTER',\n      dispatchAppState: dispatchAppState,\n      setLoginAttemptActive: setLoginAttemptActive,\n    });\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmitHandler}>\n        <div class=\"text-input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <br />\n          <input type=\"email\" name=\"email\" className=\"input-text-field\" />\n        </div>\n\n        <div className=\"text-input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <br />\n          <input type=\"password\" name=\"password\" className=\"input-text-field\" />\n        </div>\n        <input type=\"submit\" style={{ display: 'none' }} />\n\n        <div className=\"account-access-link-container\">\n          <div onClick={userRegisterHandler} className={`account-access-link `}>\n            need to register?\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import * as yup from 'yup';\n\nexport const userValidation = yup.object().shape({\n  username: yup.string().email().required(),\n  password: yup.string().min(4).max(10).required(),\n});\n","export const attemptRegister = (data) => {\n  return fetch('./register', {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'content-type': 'application/json',\n    },\n  });\n};\n","import { userValidation } from '../../../../../../validations/user-validation';\nimport { attemptRegister } from '../../../../../../helpers/attempt-register';\n\nexport const RegisterFormPanel = ({\n  dispatchAppState,\n  setLoginAttemptActive,\n}) => {\n  const onSubmitHandler = async (event) => {\n    event.preventDefault();\n    setLoginAttemptActive(() => false);\n\n    const data = {\n      username: event.target[0].value,\n      password: event.target[1].value,\n    };\n\n    if (await userValidation.isValid(data)) {\n      const response = await attemptRegister(data);\n\n      if (response.status >= 200 && response.status <= 299) {\n        dispatchAppState({ type: 'REGISTER_CONFIRM' });\n        return;\n      }\n    }\n    dispatchAppState({ type: 'REGISTER_FAIL' });\n  };\n\n  return (\n    <div>\n      <form method=\"post\" onSubmit={onSubmitHandler}>\n        <div class=\"text-input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <br />\n          <input type=\"email\" name=\"email\" className=\"input-text-field\" />\n        </div>\n\n        <div className=\"text-input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <br />\n          <input type=\"password\" name=\"password\" className=\"input-text-field\" />\n        </div>\n        <i>between 4-10 characters.</i>\n        <input type=\"submit\" style={{ display: 'none' }} />\n      </form>\n    </div>\n  );\n};\n","const tremolo = (prevTremolo, newTremolo) => {\n  prevTremolo.label = newTremolo.name;\n  prevTremolo.unit.depth.value = newTremolo.parameters[0];\n  prevTremolo.unit.frequency.value = newTremolo.parameters[1];\n  prevTremolo.unit.wet.value = newTremolo.parameters[2];\n  return prevTremolo;\n};\nconst delay = (prevDelay, newDelay) => {\n  prevDelay.label = newDelay.name;\n  prevDelay.unit.delayTime.value = newDelay.parameters[0];\n  prevDelay.unit.feedback.value = newDelay.parameters[1];\n  prevDelay.unit.wet.value = newDelay.parameters[2];\n  return prevDelay;\n};\nconst reverb = (prevReverb, newReverb) => {\n  prevReverb.label = newReverb.name;\n  prevReverb.unit.decay = newReverb.parameters[0];\n  prevReverb.unit.wet.value = newReverb.parameters[1];\n  return prevReverb;\n};\n\nconst distortion = (prevDistortion, newDistortion) => {\n  prevDistortion.label = newDistortion.name;\n  prevDistortion.unit.distortion = newDistortion.parameters[0];\n  prevDistortion.unit.wet.value = newDistortion.parameters[1];\n  return prevDistortion;\n};\n\nexport const loadNewFxParameters = {\n  tremolo,\n  delay,\n  reverb,\n  distortion,\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport { AudioComponentsContext } from '../../../../../../App';\nimport { loadNewFxParameters } from '../../../../../../helpers/load-new-fx-parameters';\n\nexport const LoadPanel = ({ dispatchAppState }) => {\n  const { oscillators, setOscillators, fx, setFx } = useContext(\n    AudioComponentsContext\n  );\n\n  const loadingText = <i style={{ fontSize: '2vh' }}>loading patches...</i>;\n\n  const [currentPatch, setCurrentPatch] = useState(loadingText);\n  const [patchBank, setPatchBank] = useState();\n  const patchIndex = useRef(0);\n\n  // onLoad, make a post request to the database for the current users stored data\n  useEffect(() => {\n    const fetchUsersPatchBank = async () => {\n      const response = await fetch('/load-patch-bank', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-access-token': localStorage.getItem('token'),\n        },\n      });\n\n      const data = await response.json();\n      if (data && data.length > 0) {\n        setPatchBank(data);\n        setCurrentPatch(data[0].name);\n      } else {\n        setCurrentPatch(<i style={{ fontSize: '2vh' }}>no saved patches...</i>);\n      }\n    };\n    fetchUsersPatchBank();\n  }, []);\n\n  const deleteClickHandler = (event) => {\n    event.preventDefault();\n    const data = { name: currentPatch };\n    const deleteCurrentPatch = async () => {\n      await fetch('/patch-bank', {\n        body: JSON.stringify(data),\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-access-token': localStorage.getItem('token'),\n        },\n      });\n    };\n\n    if (patchBank) {\n      deleteCurrentPatch();\n      dispatchAppState({ type: 'DELETE_CONFIRM', patch: currentPatch });\n    } else {\n      const notificationString = 'there is no patch to delete...';\n      const notificationStyle = { fontSize: '2vh' };\n      setCurrentPatch(<i style={notificationStyle}>{notificationString}</i>);\n    }\n  };\n\n  const loadClickHandler = () => {\n    if (patchBank) {\n      const {\n        oscillators: newOscillators,\n        fx: newFx,\n        name,\n      } = patchBank.filter((elem) => elem.name === currentPatch).at(0);\n\n      setOscillators(() => {\n        return oscillators.map((elem, index) => {\n          const oscillatorBeingLoaded = newOscillators[index];\n          elem.label = oscillatorBeingLoaded.name;\n          elem.unit.type = oscillatorBeingLoaded.waveType;\n          elem.unit.frequency.value = oscillatorBeingLoaded.frequency;\n          elem.unit.volume.value = oscillatorBeingLoaded.volume;\n          return elem;\n        });\n      });\n\n      setFx(() => {\n        return [\n          loadNewFxParameters.tremolo(fx[0], newFx[0]),\n          loadNewFxParameters.delay(fx[1], newFx[1]),\n          loadNewFxParameters.reverb(fx[2], newFx[2]),\n          loadNewFxParameters.distortion(fx[3], newFx[3]),\n        ];\n      });\n\n      dispatchAppState({ type: 'LOAD_CONFIRM', patch: name });\n    }\n  };\n\n  const cancelClickHandler = () => dispatchAppState({ type: 'RETURN' });\n\n  const getNextPatch = () => {\n    if (patchBank && patchIndex.current < patchBank.length - 1) {\n      const current = patchBank[++patchIndex.current];\n      setCurrentPatch(current.name);\n    }\n  };\n\n  const getPreviousPatch = () => {\n    if (patchBank && patchIndex.current > 0) {\n      const current = patchBank[--patchIndex.current];\n      setCurrentPatch(`${current.name}: ${current.parameter}`);\n    }\n  };\n\n  return (\n    <div className=\"patch-access-container\">\n      <p>choose a patch!</p>\n      <div className=\"patch-text-display\">{currentPatch}</div>\n\n      <div className=\"patch-access-control-panel\">\n        <div onClick={getPreviousPatch}>\n          <FontAwesomeIcon\n            icon={['far', 'arrow-left']}\n            className=\"control-panel-symbol\"\n          />\n        </div>\n        <button onClick={loadClickHandler}>load!</button>\n        <button onClick={cancelClickHandler}>cancel?</button>\n        <div onClick={getNextPatch}>\n          {' '}\n          <FontAwesomeIcon\n            icon={['far', 'arrow-right']}\n            className=\"control-panel-symbol\"\n          />\n        </div>\n      </div>\n      <div onClick={deleteClickHandler}>\n        <FontAwesomeIcon\n          icon={['far', 'trash']}\n          className=\"control-panel-symbol\"\n        />\n      </div>\n    </div>\n  );\n};\n","import * as yup from 'yup';\n\nexport const patchBankValidation = yup.object().shape({\n  name: yup.string().required(),\n  oscillators: yup.array().of(\n    yup.object().shape({\n      type: yup.string().required(),\n      name: yup.string().required(),\n      waveType: yup.string().required(),\n      volume: yup.number().min(-130).max(0).required(),\n      frequency: yup.number().min(0).max(2000).required(),\n    })\n  ),\n  fx: yup.array().of(\n    yup.object().shape({\n      type: yup.string().required(),\n      name: yup.string().required(),\n      parameters: yup.array().of(yup.number().min(0).max(1).required()),\n    })\n  ),\n});\n","const extractTremoloData = (elem) => {\n  return {\n    type: elem.type,\n    name: elem.label,\n    parameters: [\n      elem.unit.depth.value,\n      elem.unit.frequency.value,\n      elem.unit.wet.value,\n    ],\n  };\n};\n\nconst extractDelayData = (elem) => {\n  return {\n    type: elem.type,\n    name: elem.label,\n    parameters: [\n      elem.unit.delayTime.value,\n      elem.unit.feedback.value,\n      elem.unit.wet.value,\n    ],\n  };\n};\n\nconst extractReverbData = (elem) => {\n  return {\n    type: elem.type,\n    name: elem.label,\n    parameters: [elem.unit.decay, elem.unit.wet.value],\n  };\n};\n\nconst extractDistortionData = (elem) => {\n  return {\n    type: elem.type,\n    name: elem.label,\n    parameters: [elem.unit.distortion, elem.unit.wet.value],\n  };\n};\n\nexport const extractFxData = (fx) => {\n  return [\n    extractTremoloData(fx[0]),\n    extractDelayData(fx[1]),\n    extractReverbData(fx[2]),\n    extractDistortionData(fx[3]),\n  ];\n};\n","export const extractOscillatorData = (elem) => {\n  return {\n    type: elem.type,\n    name: elem.label,\n    waveType: elem.unit.type,\n    volume: elem.unit.volume.value,\n    frequency: elem.unit.frequency.value,\n  };\n};\n","export const postData = async (data) => {\n  await fetch('/patch-bank', {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'content-type': 'application/json',\n      'x-access-token': localStorage.getItem('token'),\n    },\n  });\n};\n","import { useState, useRef, useContext } from 'react';\nimport { AudioComponentsContext } from '../../../../../../App';\nimport { patchBankValidation } from '../../../../../../validations/patch-bank-validation';\nimport { extractFxData } from '../../../../../../helpers/extract-fx-data';\nimport { extractOscillatorData } from '../../../../../../helpers/extract-oscillator-data';\nimport { entryIsNotEmpty } from '../../../../../../helpers/entry-is-not-empty';\nimport { postData } from '../../../../../../helpers/post-data';\n\nexport const SavePanel = ({ dispatchAppState }) => {\n  const { oscillators, fx } = useContext(AudioComponentsContext);\n  const form = useRef(null);\n  const [promptText, setPromptText] = useState('choose a name!');\n\n  const onSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const fxData = extractFxData(fx);\n    const oscillatorData = oscillators.map((elem) => {\n      return extractOscillatorData(elem);\n    });\n\n    const data = {\n      name: event.target[0].value,\n      oscillators: oscillatorData,\n      fx: fxData,\n    };\n\n    const validEntry =\n      entryIsNotEmpty(data.name) && (await patchBankValidation.isValid(data));\n\n    if (validEntry) {\n      postData(data);\n      dispatchAppState({ type: 'SAVE_CONFIRM', patch: data.name });\n    } else {\n      setPromptText('name cannot be empty!');\n    }\n  };\n\n  const cancelClickHandler = () => dispatchAppState({ type: 'RETURN' });\n\n  return (\n    <div className=\"patch-access-container\">\n      <form onSubmit={onSubmitHandler} ref={form} className=\"save-form\">\n        <label htmlFor=\"patch-save-input\">\n          <p>{promptText}</p>\n        </label>\n        <input\n          type=\"text\"\n          className=\"patch-save-input\"\n          name=\"patch-save-input\"\n        />\n        <input type=\"submit\" style={{ display: 'none' }} />\n\n        <div className=\"patch-access-control-panel patch-save-control-panel\">\n          <button>save!</button>\n          <button onClick={cancelClickHandler}>cancel?</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","export const entryIsNotEmpty = (entry) => {\n  return entry && entry.toString().trim() !== '';\n};\n","import { TutorialPanel } from '../components/grid-panel/components/title/panels/forms/TutorialPanel';\nimport { GenerativePanel } from '../components/grid-panel/components/title/panels/playback-states/GenerativePanel';\nimport { defaultAppState } from '../default-state/default-app-state';\nimport { DefaultPanel } from '../components/grid-panel/components/title/panels/playback-states/DefaultPanel';\nimport { LoginFormPanel } from '../components/grid-panel/components/title/panels/forms/LoginFormPanel';\nimport { RegisterFormPanel } from '../components/grid-panel/components/title/panels/forms/RegisterFormPanel';\nimport { LoadPanel } from '../components/grid-panel/components/title/panels/crud/LoadPanel';\nimport { SavePanel } from '../components/grid-panel/components/title/panels/crud/SavePanel';\n\n/**\n * god object reducer that handles display mode, reset, display,\n * generative and mute updates\n *\n * ...refactor drastically needed.\n */\nconst types = {\n  DEFAULT: 'DEFAULT',\n  DEFAULT_LOGGED_IN: 'DEFAULT_LOGGED_IN',\n  TUTORIAL: 'TUTORIAL',\n  GENERATIVE: 'GENERATIVE',\n  GENERATIVE_OFF: 'GENERATIVE_OFF',\n  MUTE: 'MUTE',\n  UNMUTE: 'UNMUTE',\n  RESET: 'RESET',\n  LOGIN_CONFIRM: 'LOGIN_CONFIRM',\n  LOGIN_FAIL: 'LOGIN_FAIL',\n  LOGOUT_CONFIRM: 'LOGOUT_CONFIRM',\n  REGISTER_FAIL: 'REGISTER_FAIL',\n  REGISTER_CONFIRM: 'REGISTER_CONFIRM',\n  SAVE_CONFIRM: 'SAVE_CONFIRM',\n  LOAD_CONFIRM: 'LOAD_CONFIRM',\n  LOGIN: 'LOGIN',\n  REGISTER: 'REGISTER',\n  SAVE: 'SAVE',\n  LOAD: 'LOAD',\n  RENAME_CONFIRM: 'RENAME_CONFIRM',\n  DELETE_CONFIRM: 'DELETE_CONFIRM',\n  RETURN: 'RETURN',\n};\n\nexport const appReducer = (state, action) => {\n  switch (action.type) {\n    case types.DEFAULT:\n      return {\n        ...defaultAppState,\n        mute: false,\n      };\n    case types.DEFAULT_LOGGED_IN:\n      return {\n        display: <DefaultPanel />,\n        generative: false,\n        tutorial: false,\n        reset: false,\n        mute: false,\n        signedIn: true,\n      };\n    case types.TUTORIAL:\n      return {\n        ...state,\n        display: <TutorialPanel />,\n        tutorial: true,\n      };\n    case types.GENERATIVE:\n      return {\n        ...state,\n        display: <GenerativePanel />,\n        tutorial: false,\n        generative: true,\n      };\n    case types.GENERATIVE_OFF:\n      return {\n        ...state,\n        display: <DefaultPanel />,\n        tutorial: false,\n        generative: false,\n      };\n    case types.MUTE:\n      return {\n        ...state,\n        generative: false,\n        mute: true,\n        display: <DefaultPanel />,\n      };\n    case types.UNMUTE:\n      return {\n        ...state,\n        generative: false,\n        mute: false,\n        display: <DefaultPanel />,\n      };\n    case types.RESET:\n      return {\n        ...state,\n        mute: false,\n        display: <DefaultPanel text=\"reset!\" />,\n        tutorial: false,\n        generative: false,\n      };\n    case types.LOGIN_CONFIRM:\n      return {\n        ...state,\n        display: <DefaultPanel text=\"logged in!\" />,\n        tutorial: false,\n        signedIn: true,\n      };\n    case types.SAVE_CONFIRM:\n      return {\n        ...state,\n        signedIn: true,\n        display: <DefaultPanel text={`${action.patch} patch saved!`} />,\n      };\n    case types.LOAD_CONFIRM:\n      return {\n        ...state,\n        mute: false,\n        signedIn: true,\n        display: <DefaultPanel text={`${action.patch} patch loaded!`} />,\n      };\n    case types.LOGOUT_CONFIRM:\n      return {\n        ...state,\n        display: <DefaultPanel text=\"logged out!\" />,\n        tutorial: false,\n        signedIn: false,\n      };\n    case types.REGISTER_CONFIRM:\n      return {\n        ...state,\n        display: (\n          <DefaultPanel\n            text=\"registered!\"\n            setLoginAttemptActive={action.setLoginAttemptActive}\n          />\n        ),\n        tutorial: false,\n        signedIn: false,\n      };\n    case types.RENAME_CONFIRM:\n      return {\n        ...state,\n        display: <DefaultPanel text=\"patch renamed!\" />,\n        tutorial: false,\n      };\n    case types.DELETE_CONFIRM:\n      return {\n        ...state,\n        display: <DefaultPanel text={`${action.patch} patch deleted!`} />,\n        tutorial: false,\n      };\n    case types.LOGIN:\n      return {\n        ...state,\n        display: (\n          <LoginFormPanel\n            dispatchAppState={action.dispatchAppState}\n            setLoginAttemptActive={action.setLoginAttemptActive}\n          />\n        ),\n        tutorial: false,\n      };\n    case types.REGISTER:\n      return {\n        ...state,\n        display: (\n          <RegisterFormPanel\n            dispatchAppState={action.dispatchAppState}\n            setLoginAttemptActive={action.setLoginAttemptActive}\n          />\n        ),\n        tutorial: false,\n      };\n    case types.SAVE:\n      return {\n        ...state,\n\n        display: <SavePanel dispatchAppState={action.dispatchAppState} />,\n        tutorial: false,\n      };\n    case types.LOAD:\n      return {\n        ...state,\n        display: <LoadPanel dispatchAppState={action.dispatchAppState} />,\n        generative: false,\n        tutorial: false,\n        signedIn: true,\n      };\n    case types.REGISTER_FAIL:\n      return {\n        ...state,\n        display: <DefaultPanel text=\"registration unsuccessful...\" />,\n        tutorial: false,\n      };\n    case types.LOGIN_FAIL:\n      return {\n        ...state,\n        display: <DefaultPanel text=\"login unsuccessful...\" />,\n        tutorial: false,\n      };\n    case types.RETURN:\n      return {\n        ...state,\n        tutorial: false,\n        display: <DefaultPanel />,\n      };\n    default:\n      throw new Error('invalid display type provided');\n  }\n};\n","import { NavBarContainer } from './components/nav-bar/containers/NavBarContainer';\nimport { GridPanelContainer } from './components/grid-panel/containers/GridPanelContainer';\nimport { appReducer } from './helpers/app-reducer';\nimport { defaultAppState } from './default-state/default-app-state';\nimport { createContext, useState, useReducer, useEffect } from 'react';\n\nexport const AudioComponentsContext = createContext();\nexport const AnimationIdContext = createContext();\nexport const DisplayVisibleContext = createContext();\n\nexport const App = ({ oscillators: defaultOscillators, fx: defaultFx }) => {\n  const [oscillators, setOscillators] = useState(defaultOscillators);\n  const [fx, setFx] = useState(defaultFx);\n  const [animationId, setAnimationId] = useState('TUTORIAL');\n  const [displayVisible, setDisplayVisible] = useState(true);\n  const [appState, dispatchAppState] = useReducer(appReducer, defaultAppState);\n  const [resetState, setResetState] = useState(false);\n  const [loginAttemptActive, setLoginAttemptActive] = useState(false);\n\n  // Login process already complete if previous session is still validated\n  useEffect(() => {\n    const loggedIn = localStorage.getItem('username');\n\n    if (loggedIn) {\n      setAnimationId(null);\n      dispatchAppState({ type: 'DEFAULT_LOGGED_IN' });\n    }\n  }, []);\n\n  return (\n    <AudioComponentsContext.Provider\n      value={{\n        oscillators: oscillators,\n        fx: fx,\n        setOscillators: setOscillators,\n        setFx: setFx,\n        resetState: resetState,\n        setResetState: setResetState,\n      }}\n    >\n      <DisplayVisibleContext.Provider\n        value={{\n          displayVisible: displayVisible,\n          setDisplayVisible: setDisplayVisible,\n        }}\n      >\n        <AnimationIdContext.Provider\n          value={{ animationId: animationId, setAnimationId: setAnimationId }}\n        >\n          <div className=\"main-container\">\n            <NavBarContainer\n              appState={appState}\n              dispatchAppState={dispatchAppState}\n              setLoginAttemptActive={setLoginAttemptActive}\n              loginAttemptActive={loginAttemptActive}\n            />\n            <GridPanelContainer\n              appState={appState}\n              dispatchAppState={dispatchAppState}\n            />\n          </div>\n        </AnimationIdContext.Provider>\n      </DisplayVisibleContext.Provider>\n    </AudioComponentsContext.Provider>\n  );\n};\n","import { defaultOscillatorSettings } from '../data/default-oscillator-settings';\nimport { oscillatorFactory } from '../factories/oscillator-factory';\n\nconst {\n  DEFAULT_FREQUENCY,\n  DEFAULT_WAVESHAPE,\n  DEFAULT_OSCILLATOR_LABELS,\n  DEFAULT_VOLUME,\n} = defaultOscillatorSettings;\n\nexport const oscillator = (Tone, index) => {\n  const oscillator = oscillatorFactory(\n    Tone,\n    DEFAULT_FREQUENCY,\n    DEFAULT_WAVESHAPE\n  );\n\n  return {\n    type: DEFAULT_OSCILLATOR_LABELS[index],\n    label: DEFAULT_OSCILLATOR_LABELS[index],\n    pendingVolumeUpdate: false,\n    volumeUpdateValue: null,\n    unit: oscillator,\n    reset: () => {\n      oscillator.volume.value = DEFAULT_VOLUME;\n      oscillator.frequency.value = DEFAULT_FREQUENCY;\n      oscillator.type = DEFAULT_WAVESHAPE;\n    },\n  };\n};\n","export const oscillatorFactory = (Tone, frequency, waveshape) => {\n  const oscillator = new Tone.Oscillator(frequency, waveshape);\n  oscillator.volume.value = -128;\n  return oscillator;\n};\n","export const defaultFxSettings = {\n  DEFAULT_PARAM_VALUE: 0.5,\n  DEFAULT_MIX_VALUE: 0,\n  DEFAULT_MIN_RANGE: 0,\n  DEFAULT_MAX_RANGE: 1,\n};\n","export const fxFactory = (TYPE, Tone) => {\n  const DEFAULT_WET = 0;\n  switch (TYPE) {\n    case 'DISTORTION':\n      const distortion = new Tone.Distortion(0.8);\n      distortion.wet.value = DEFAULT_WET;\n      return distortion;\n    case 'DELAY':\n      const delay = new Tone.PingPongDelay('4n', 0.2);\n      delay.wet.value = DEFAULT_WET;\n      return delay;\n    case 'REVERB':\n      const reverb = new Tone.Reverb(10);\n      reverb.wet.value = DEFAULT_WET;\n      return reverb;\n    case 'TREMOLO':\n      const tremolo = new Tone.Tremolo(3, 0.5).start();\n      tremolo.wet.value = DEFAULT_WET;\n      return tremolo;\n    default:\n      throw new Error('Invalid FX type provided.');\n  }\n};\n","import { defaultFxSettings } from '../data/default-fx-settings';\nimport { fxFactory } from '../factories/fx-factory';\n\nconst {\n  DEFAULT_PARAM_VALUE,\n  DEFAULT_MIN_RANGE,\n  DEFAULT_MAX_RANGE,\n  DEFAULT_MIX_VALUE,\n} = defaultFxSettings;\n\nexport const tremolo = (Tone) => {\n  const Tremolo = fxFactory('TREMOLO', Tone);\n\n  return {\n    // Facade object to restrict the UI components access to any complex audio logic\n    type: 'Tremolo',\n    label: 'Tremolo',\n    unit: Tremolo,\n    parameters: [\n      {\n        label: 'Depth',\n        set: (value) => (Tremolo.depth.value = value),\n        defaultValue: DEFAULT_PARAM_VALUE,\n        min: DEFAULT_MIN_RANGE,\n        max: DEFAULT_MAX_RANGE,\n        reset: () => (Tremolo.depth.value = DEFAULT_PARAM_VALUE),\n      },\n      {\n        label: 'Speed',\n        set: (value) => (Tremolo.frequency.value = value),\n        defaultValue: DEFAULT_PARAM_VALUE,\n        min: DEFAULT_MIN_RANGE,\n        max: DEFAULT_MAX_RANGE,\n        reset: () => (Tremolo.frequency.value = DEFAULT_PARAM_VALUE),\n      },\n      {\n        label: 'Amount',\n        set: (value) => (Tremolo.wet.value = value),\n        defaultValue: DEFAULT_MIX_VALUE,\n        min: DEFAULT_MIN_RANGE,\n        max: DEFAULT_MAX_RANGE,\n        reset: () => (Tremolo.wet.value = DEFAULT_MIX_VALUE),\n      },\n    ],\n  };\n};\n","import { defaultFxSettings } from '../data/default-fx-settings';\nimport { fxFactory } from '../factories/fx-factory';\n\nconst {\n  DEFAULT_PARAM_VALUE,\n  DEFAULT_MIN_RANGE,\n  DEFAULT_MAX_RANGE,\n  DEFAULT_MIX_VALUE,\n} = defaultFxSettings;\n\nexport const delay = (Tone) => {\n  const Delay = fxFactory('DELAY', Tone);\n\n  return {\n    // Facade object to restrict the UI components access to any complex audio logic\n    label: 'Delay',\n    type: 'Delay',\n    unit: Delay,\n\n    parameters: [\n      {\n        label: 'Time',\n        set: (value) => (Delay.delayTime.value = value),\n        defaultValue: DEFAULT_PARAM_VALUE,\n        min: DEFAULT_MIN_RANGE,\n        max: DEFAULT_MAX_RANGE,\n        reset: () => (Delay.delayTime.value = DEFAULT_PARAM_VALUE),\n      },\n      {\n        label: 'Repeats',\n        set: (value) => (Delay.feedback.value = value),\n        defaultValue: DEFAULT_PARAM_VALUE,\n        min: DEFAULT_MIN_RANGE,\n        max: DEFAULT_MAX_RANGE,\n        reset: () => (Delay.feedback.value = DEFAULT_PARAM_VALUE),\n      },\n      {\n        label: 'Amount',\n        set: (value) => (Delay.wet.value = value),\n        defaultValue: DEFAULT_MIX_VALUE,\n        min: DEFAULT_MIN_RANGE,\n        max: DEFAULT_MAX_RANGE,\n        reset: () => (Delay.wet.value = DEFAULT_MIX_VALUE),\n      },\n    ],\n  };\n};\n","import { defaultFxSettings } from '../data/default-fx-settings';\nimport { fxFactory } from '../factories/fx-factory';\n\nconst {\n  DEFAULT_PARAM_VALUE,\n  DEFAULT_MIN_RANGE,\n  DEFAULT_MAX_RANGE,\n  DEFAULT_MIX_VALUE,\n} = defaultFxSettings;\n\nexport const reverb = (Tone) => {\n  const Reverb = fxFactory('REVERB', Tone);\n\n  return {\n    // Facade object to restrict the UI components access to any complex audio logic\n    label: 'Reverb',\n    type: 'Reverb',\n    unit: Reverb,\n    parameters: [\n      {\n        label: 'Size',\n        set: (value) => (Reverb.decay = value),\n        defaultValue: DEFAULT_PARAM_VALUE,\n        min: 1,\n        max: DEFAULT_MAX_RANGE,\n        reset: () => (Reverb.decay = DEFAULT_PARAM_VALUE),\n      },\n      {\n        label: 'Amount',\n        set: (value) => (Reverb.wet.value = value),\n        defaultValue: DEFAULT_MIX_VALUE,\n        min: DEFAULT_MIN_RANGE,\n        max: DEFAULT_MAX_RANGE / 2,\n        reset: () => (Reverb.wet.value = DEFAULT_MIX_VALUE),\n      },\n    ],\n  };\n};\n","import { defaultFxSettings } from '../data/default-fx-settings';\nimport { fxFactory } from '../factories/fx-factory';\n\nconst {\n  DEFAULT_PARAM_VALUE,\n  DEFAULT_MIN_RANGE,\n  DEFAULT_MAX_RANGE,\n  DEFAULT_MIX_VALUE,\n} = defaultFxSettings;\n\nexport const distortion = (Tone) => {\n  const Distortion = fxFactory('DISTORTION', Tone);\n  return {\n    // Facade object to restrict the UI components access to any complex audio logic\n    label: 'Distortion',\n    type: 'Distortion',\n    unit: Distortion,\n    parameters: [\n      {\n        label: 'Dirt',\n        set: (value) => (Distortion.distortion = value),\n        defaultValue: DEFAULT_PARAM_VALUE,\n        min: DEFAULT_MIN_RANGE,\n        max: DEFAULT_MAX_RANGE,\n        reset: () => (Distortion.distortion = DEFAULT_PARAM_VALUE),\n      },\n      {\n        label: 'Amount',\n        set: (value) => (Distortion.wet.value = value),\n        defaultValue: DEFAULT_MIX_VALUE,\n        min: DEFAULT_MIN_RANGE,\n        max: DEFAULT_MAX_RANGE,\n        reset: () => (Distortion.wet.value = DEFAULT_MIX_VALUE),\n      },\n    ],\n  };\n};\n","import { faWaveformPath } from '@fortawesome/pro-regular-svg-icons/faWaveformPath';\nimport { faEject } from '@fortawesome/pro-regular-svg-icons/faEject';\nimport { faBook } from '@fortawesome/pro-regular-svg-icons/faBook';\nimport { faFileUpload } from '@fortawesome/pro-regular-svg-icons/faFileUpload';\nimport { faSignOut } from '@fortawesome/pro-regular-svg-icons/faSignOut';\nimport { faWindowClose } from '@fortawesome/pro-regular-svg-icons/faWindowClose';\nimport { faSignIn } from '@fortawesome/pro-regular-svg-icons/faSignIn';\nimport { faFileDownload } from '@fortawesome/pro-regular-svg-icons/faFileDownload';\nimport { faPauseCircle } from '@fortawesome/pro-regular-svg-icons/faPauseCircle';\nimport { faPlayCircle } from '@fortawesome/pro-regular-svg-icons/faPlayCircle';\nimport { faRedo } from '@fortawesome/pro-regular-svg-icons/faRedo';\nimport { faVolume } from '@fortawesome/pro-regular-svg-icons/faVolume';\nimport { faVolumeOff } from '@fortawesome/pro-regular-svg-icons/faVolumeOff';\nimport { faArrowLeft } from '@fortawesome/pro-regular-svg-icons/faArrowLeft';\nimport { faArrowRight } from '@fortawesome/pro-regular-svg-icons/faArrowRight';\nimport { faTrash } from '@fortawesome/pro-regular-svg-icons/faTrash';\nimport { faWaveSine } from '@fortawesome/pro-regular-svg-icons/faWaveSine';\nimport { faWaveSquare } from '@fortawesome/pro-regular-svg-icons/faWaveSquare';\nimport { faWaveTriangle } from '@fortawesome/pro-regular-svg-icons/faWaveTriangle';\n\nexport const faIcons = [\n  faWaveformPath,\n  faEject,\n  faBook,\n  faFileUpload,\n  faSignOut,\n  faWindowClose,\n  faSignIn,\n  faFileDownload,\n  faPauseCircle,\n  faPlayCircle,\n  faRedo,\n  faVolume,\n  faVolumeOff,\n  faArrowLeft,\n  faArrowRight,\n  faTrash,\n  faWaveSine,\n  faWaveSquare,\n  faWaveTriangle,\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport { App } from './App';\nimport { audioConfiguration } from './helpers/audio-configuration';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport * as Tone from 'tone';\nimport { faIcons } from './images/faIcons';\n\n// Configure global icon library prior to first render\nlibrary.add(...faIcons);\n\n// Configure global audio components prior to first render\nconst { oscillators, fx } = audioConfiguration(Tone);\n\n// On first user gesture ONLY, trigger global audio context (required for Chrome)\ndocument.addEventListener('click', () => Tone.start(), { once: true });\n\nReactDOM.render(\n  <React.StrictMode>\n    <App oscillators={oscillators} fx={fx} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { oscillator } from '../audio-units/oscillator';\nimport { tremolo } from '../audio-units/tremolo';\nimport { delay } from '../audio-units/delay';\nimport { reverb } from '../audio-units/reverb';\nimport { distortion } from '../audio-units/distortion';\n\nconst OSCILLATOR_COUNT = 4;\n\nexport const audioConfiguration = (Tone) => {\n  const oscillators = [];\n  for (let index = 0; index < OSCILLATOR_COUNT; index++) {\n    oscillators.push(oscillator(Tone, index));\n  }\n  const oscillatorUnits = oscillators.map((elem) => elem.unit);\n\n  // Global FX instantiation\n  const fx = [tremolo(Tone), delay(Tone), reverb(Tone), distortion(Tone)];\n  const fxUnits = fx.map((elem) => elem.unit);\n\n  // Connect each oscillator through the fx chains to the output\n  // via a limiter to minimise volume peaks.\n  oscillatorUnits.forEach((elem) => {\n    elem.chain(...fxUnits, new Tone.Limiter(0), Tone.Destination);\n    elem.start();\n  });\n\n  return { oscillators, fx };\n};\n"],"sourceRoot":""}